{
  "test_requests": {
    "1_create_user_1": {
      "method": "POST",
      "url": "http://localhost:3000/users",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "name": "John Doe",
        "email": "john.doe@example.com"
      }
    },
    "2_create_user_2": {
      "method": "POST", 
      "url": "http://localhost:3000/users",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "name": "Jane Smith",
        "email": "jane.smith@example.com"
      }
    },
    "3_create_user_3": {
      "method": "POST",
      "url": "http://localhost:3000/users", 
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "name": "Mike Johnson",
        "email": "mike.johnson@example.com"
      }
    },
    "4_get_all_users": {
      "method": "GET",
      "url": "http://localhost:3000/users",
      "note": "No body needed for GET request"
    },
    "5_get_single_user": {
      "method": "GET",
      "url": "http://localhost:3000/users/1",
      "note": "Replace '1' with actual user ID from create response"
    },
    "6_update_user": {
      "method": "PUT",
      "url": "http://localhost:3000/users/1",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "name": "John Doe Updated",
        "email": "john.doe.updated@example.com"
      },
      "note": "Replace '1' with actual user ID"
    },
    "7_delete_user": {
      "method": "DELETE",
      "url": "http://localhost:3000/users/1",
      "note": "Replace '1' with actual user ID. No body needed for DELETE"
    },
    "8_health_check": {
      "method": "GET",
      "url": "http://localhost:3000/health",
      "note": "Server health check - no body needed"
    }
  },
  
  "additional_test_data": {
    "bulk_users": [
      {
        "name": "Alice Wilson",
        "email": "alice.wilson@test.com"
      },
      {
        "name": "Bob Brown",
        "email": "bob.brown@test.com"
      },
      {
        "name": "Carol Davis",
        "email": "carol.davis@test.com"
      },
      {
        "name": "David Miller",
        "email": "david.miller@test.com"
      },
      {
        "name": "Eva Garcia",
        "email": "eva.garcia@test.com"
      }
    ],
    
    "edge_cases": {
      "empty_name": {
        "name": "",
        "email": "empty.name@test.com"
      },
      "long_name": {
        "name": "This is a very long name that might test the varchar limits of the database field",
        "email": "long.name@test.com"
      },
      "special_characters": {
        "name": "José María Ñoño",
        "email": "special.chars@test.com"
      },
      "duplicate_email": {
        "name": "Duplicate Email Test",
        "email": "john.doe@example.com"
      }
    }
  },
  
  "expected_responses": {
    "successful_create": {
      "status": 201,
      "response": {
        "message": "User created successfully",
        "user": {
          "id": 1,
          "name": "John Doe",
          "email": "john.doe@example.com",
          "created_at": "2024-01-01T00:00:00Z"
        }
      }
    },
    "successful_get_all": {
      "status": 200,
      "response": {
        "users": [
          {
            "id": 1,
            "name": "John Doe",
            "email": "john.doe@example.com",
            "created_at": "2024-01-01T00:00:00Z"
          }
        ]
      }
    },
    "user_not_found": {
      "status": 404,
      "response": {
        "error": "User not found"
      }
    },
    "duplicate_email_error": {
      "status": 400,
      "response": {
        "error": "duplicate key value violates unique constraint"
      }
    }
  }
}

{
      "method": "POST",
      "url": "http://localhost:3000/users",
      "headers": {
        "Content-Type": "application/json"
      },
      "body": {
        "email": "john.doe@example.com",
        "name": "wendy"
      }
    }